// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Registration.Clients.Devices.V20190115.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Device registration.
    /// </summary>
    public partial class DeviceRegistration
    {
        /// <summary>
        /// Initializes a new instance of the DeviceRegistration class.
        /// </summary>
        public DeviceRegistration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeviceRegistration class.
        /// </summary>
        /// <param name="registrationId">Registration Id.</param>
        /// <param name="tpm">Tpm.</param>
        /// <param name="data">Custom data.</param>
        public DeviceRegistration(string registrationId = default(string), TpmAttestation tpm = default(TpmAttestation), object data = default(object))
        {
            RegistrationId = registrationId;
            Tpm = tpm;
            Data = data;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets registration Id.
        /// </summary>
        [JsonProperty(PropertyName = "registrationId")]
        public string RegistrationId { get; set; }

        /// <summary>
        /// Gets or sets tpm.
        /// </summary>
        [JsonProperty(PropertyName = "tpm")]
        public TpmAttestation Tpm { get; set; }

        /// <summary>
        /// Gets or sets custom data.
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public object Data { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Tpm != null)
            {
                Tpm.Validate();
            }
        }
    }
}
