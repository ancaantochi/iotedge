// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Registration.Clients.Devices.V20190115.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// X509 registration result.
    /// </summary>
    public partial class X509RegistrationResult
    {
        /// <summary>
        /// Initializes a new instance of the X509RegistrationResult class.
        /// </summary>
        public X509RegistrationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the X509RegistrationResult class.
        /// </summary>
        public X509RegistrationResult(X509CertificateInfo certificateInfo = default(X509CertificateInfo), string enrollmentGroupId = default(string), X509CertificateInfo signingCertificateInfo = default(X509CertificateInfo))
        {
            CertificateInfo = certificateInfo;
            EnrollmentGroupId = enrollmentGroupId;
            SigningCertificateInfo = signingCertificateInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "certificateInfo")]
        public X509CertificateInfo CertificateInfo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enrollmentGroupId")]
        public string EnrollmentGroupId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "signingCertificateInfo")]
        public X509CertificateInfo SigningCertificateInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CertificateInfo != null)
            {
                CertificateInfo.Validate();
            }
            if (SigningCertificateInfo != null)
            {
                SigningCertificateInfo.Validate();
            }
        }
    }
}
